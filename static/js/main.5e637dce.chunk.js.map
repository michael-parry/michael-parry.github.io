{"version":3,"sources":["components/Navbar.js","components/home/table/Row.js","components/home/table/Table.js","components/home/Config/Callsign.js","components/home/Config/RadioInput.js","components/home/Config/SatSearch/SatItem.js","components/home/Config/SatSearch/SatItemActive.js","components/home/Config/SatSearch/SatSearch.js","components/home/Config/Channels.js","components/home/Config/Tone.js","components/home/Config/Power.js","components/home/Config/Name.js","components/home/Config/Export.js","components/home/Config/Config.js","components/home/Home.js","components/about/About.js","serviceWorker.js","index.js","App.js"],"names":["navbar","className","to","activeClassName","href","target","rel","icon","faTwitter","faGithub","Component","Row","props","rowContent","Object","values","rowContents","map","data","key","Table","tableRows","this","columns","column","value","class","title","bodyRows","bodyContent","contents","style","height","Callsign","type","name","SelectInput","handleChange","bind","e","onOptionChange","optionsList","options","option","id","radioName","selectInfo","label","inputName","onChange","SatItem","number","isDisabled","disabled","onClick","handleClick","nickname","SatSearch","handleSearch","state","sats","satsFound","setState","query","toUpperCase","searchList","filter","sat","includes","preventDefault","satObject","find","parseInt","isActive","newSatArray","sort","a","b","foundSatArray","length","activeSatArray","placeholder","Channels","handleClose","handleShow","show","variant","size","faQuestionCircle","Modal","onHide","centered","Header","closeButton","Title","Body","Footer","Button","channelStart","Tone","aria-label","aria-describedby","Power","powerList","power","Name","Export","Config","radios","selectedRadio","home","setHeader","handleChannelChange","selectedOption","channels","radio","foundRadio","header","tableRow","Option","channelDetails","asideStyle","position","top","width","left","bottom","overflowY","Container","marginTop","paddingBottom","display","Boolean","window","location","hostname","match","ReactDOM","render","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e637dce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport default class navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar navbar-expand navbar-dark bg-primary sticky-top\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          ChirpSAT\r\n        </Link>\r\n\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              to=\"/about\"\r\n              className=\"nav-link\"\r\n              activeClassName=\"nav-link active\"\r\n            >\r\n              About\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"navbar-item\">\r\n            <a\r\n              href=\"https://www.twitter.com/ke8kdf/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"nav-link\"\r\n            >\r\n              <FontAwesomeIcon icon={faTwitter} />\r\n            </a>\r\n          </li>\r\n          <li className=\"navbar-item\">\r\n            <a\r\n              href=\"https://github.com/michael-parry/chirpsat-react\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"nav-link\"\r\n            >\r\n              <FontAwesomeIcon icon={faGithub} />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Row(props) {\r\n  const contentArray = Object.values(props.rowContents);\r\n  const rowContent = contentArray.map(data => (\r\n    <td className=\"table-data text-nowrap\">{data}</td>\r\n  ));\r\n  return <tr key={props[\"No.\"]}>{rowContent}</tr>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Row from \"./Row\";\r\n\r\nexport default class Table extends Component {\r\n  render() {\r\n    const tableRows = this.props.columns.map(column => (\r\n      <th className=\"text-nowrap\" value={column.class}>\r\n        {column.title}\r\n      </th>\r\n    ));\r\n    const bodyRows = this.props.bodyContent.map(contents => (\r\n      <Row rowContents={contents} key={contents[\"No.\"]}></Row>\r\n    ));\r\n\r\n    return (\r\n      <div\r\n        className=\"col col-7 d-none d-sm-block offset-sm-5 offset-lg-2 col-lg-10 table-responsive p-0\"\r\n        style={{ height: \"Calc(100vh - 56px)\" }}\r\n      >\r\n        <table className=\"table table-striped table-bordered p-0  p-0 m-0\">\r\n          <thead className=\"thead-dark sticky-top\">\r\n            <tr>{tableRows}</tr>\r\n          </thead>\r\n          <tbody>{bodyRows}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Callsign extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>Callsign</label>\r\n        <input type=\"text\" name=\"channelRadioID\" className=\"form-control\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class SelectInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.props.onOptionChange(e.target.value);\r\n  }\r\n  render() {\r\n    const optionsList = this.props.options.map(option => (\r\n      <option key={option.id} value={option.id} className=\"form-control\">\r\n        {option.radioName}\r\n      </option>\r\n    ));\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>{this.props.selectInfo.label}</label>\r\n        <select\r\n          className=\"form-control\"\r\n          id=\"radioInput\"\r\n          name={this.props.selectInfo.inputName}\r\n          onChange={this.handleChange}\r\n          value={this.props.value}\r\n        >\r\n          <option value=\"0\">Choose..</option>\r\n          {optionsList}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst classInactive = \"list-group-item list-group-item-action bg-light\";\r\n\r\nexport default class SatItem extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        key={this.props.number}\r\n        value={this.props.number}\r\n        className={this.props.isDisabled ? \"d-none\" : classInactive}\r\n        disabled={this.props.isDisabled}\r\n        onClick={this.props.handleClick.bind(this, this.props.number)}\r\n      >\r\n        {this.props.nickname}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst classActive =\r\n  \"list-group-item list-group-item-action bg-secondary text-white\";\r\n\r\nexport default class SatItem extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        key={this.props.number}\r\n        value={this.props.number}\r\n        className={classActive}\r\n        disabled={this.props.isDisabled}\r\n        onClick={this.props.handleClick.bind(this, this.props.number)}\r\n      >\r\n        {this.props.nickname}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport sats from \"../../../../json/sats\";\r\nimport SatItem from \"./SatItem\";\r\nimport SatItemActive from \"./SatItemActive\";\r\n\r\nexport default class SatSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      value: \"\",\r\n      sats: sats,\r\n      satsFound: sats\r\n    };\r\n  }\r\n\r\n  handleSearch(e) {\r\n    this.setState({ value: e.target.value });\r\n    const query = e.target.value.toUpperCase();\r\n    let searchList = this.state.sats.filter(sat =>\r\n      sat.nickname.toUpperCase().includes(query)\r\n    );\r\n    this.setState({\r\n      satsFound: searchList\r\n    });\r\n  }\r\n\r\n  handleClick(id, e) {\r\n    e.preventDefault();\r\n    let satObject = this.state.sats.find(sat => sat.number === parseInt(id));\r\n    satObject.isActive = !satObject.isActive;\r\n    const newSatArray = [\r\n      ...this.state.sats.filter(sat => sat.number !== parseInt(id)),\r\n      satObject\r\n    ].sort((a, b) => (a.nickname > b.nickname ? 1 : -1));\r\n    this.setState({\r\n      sats: newSatArray\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const InactiveSats = this.state.satsFound\r\n      .filter(sat => sat.isActive === false)\r\n      .sort((a, b) => (a.nickname > b.nickname ? 1 : -1));\r\n    let foundSatArray = InactiveSats.map(sat => (\r\n      <SatItem\r\n        number={sat.number}\r\n        nickname={sat.nickname}\r\n        isDisabled={sat.disabled}\r\n        handleClick={this.handleClick}\r\n      ></SatItem>\r\n    ));\r\n    if (foundSatArray.filter(sat => !sat.isActive).length === 0) {\r\n      foundSatArray = (\r\n        <div className=\"list-group-item list-group-item-action bg-light\">\r\n          None found..\r\n        </div>\r\n      );\r\n    }\r\n    const activeSats = this.state.sats.filter(sat => sat.isActive === true);\r\n    const activeSatArray = activeSats.map(sat => (\r\n      <SatItemActive\r\n        number={sat.number}\r\n        nickname={sat.nickname}\r\n        isDisabled={sat.disabled}\r\n        handleClick={this.handleClick}\r\n      ></SatItemActive>\r\n    ));\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>Satellites</label>\r\n        <div className=\"list-group\" id=\"satListGroup\">\r\n          <input\r\n            type=\"search\"\r\n            name=\"sat-search\"\r\n            className=\"list-group-item\"\r\n            placeholder=\"Search..\"\r\n            value={this.state.value}\r\n            onChange={this.handleSearch}\r\n          />\r\n          {foundSatArray}\r\n          {activeSatArray}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faQuestionCircle } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nexport default class Channels extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n  handleShow(e) {\r\n    e.preventDefault();\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>\r\n          Channels\r\n          <a\r\n            variant=\"white\"\r\n            size=\"sm\"\r\n            className=\"m-1 p-1\"\r\n            href=\"#0\"\r\n            onClick={this.handleShow}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faQuestionCircle}\r\n              size=\"xs\"\r\n              className=\"text-secondary\"\r\n            ></FontAwesomeIcon>\r\n          </a>\r\n          <Modal show={this.state.show} onHide={this.handleClose} centered>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Channels</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                <span class=\"font-weight-bold bg-secondary text-white rounded p-1\">\r\n                  Start\r\n                </span>{\" \"}\r\n                determines which channel number the generated channels will\r\n                begin with.\r\n              </p>{\" \"}\r\n              <p>\r\n                <span class=\"font-weight-bold bg-secondary text-white rounded p-1\">\r\n                  Spread\r\n                </span>{\" \"}\r\n                defines how many channels you would like to create for each\r\n                satellite.\r\n              </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </label>\r\n        <div className=\"form-row\">\r\n          <div className=\"input-group col-12\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"options-channel-start\"\r\n              value={this.props.channelStart}\r\n              placeholder=\"start\"\r\n              onChange={this.props.handleChange.bind(this)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"options-channel-range\"\r\n              placeholder=\"spread\"\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Tone extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>Tone</label>\r\n        <div className=\"input-group\">\r\n          <select\r\n            name=\"tone\"\r\n            className=\"form-control\"\r\n            id=\"option-tone\"\r\n            aria-label=\"Tone\"\r\n            aria-describedby=\"tone-addon\"\r\n          >\r\n            <option value=\"choose\">Choose..</option>\r\n            <option value=\"67.0\">67.0</option>\r\n            <option value=\"71.9\">71.9</option>\r\n            <option value=\"74.4\">74.4</option>\r\n            <option value=\"77.0\">77.0</option>\r\n            <option value=\"79.7\">79.7</option>\r\n            <option value=\"82.5\">82.5</option>\r\n            <option value=\"85.4\">85.4</option>\r\n            <option value=\"88.5\">88.5</option>\r\n            <option value=\"91.5\">91.5</option>\r\n            <option value=\"94.8\">94.8</option>\r\n            <option value=\"97.4\">97.4</option>\r\n            <option value=\"100.0\">100.0</option>\r\n            <option value=\"103.5\">103.5</option>\r\n            <option value=\"107.2\">107.2</option>\r\n            <option value=\"110.9\">110.9</option>\r\n            <option value=\"114.8\">114.8</option>\r\n            <option value=\"118.8\">118.8</option>\r\n            <option value=\"123.0\">123.0</option>\r\n            <option value=\"127.3\">127.3</option>\r\n            <option value=\"131.8\">131.8</option>\r\n            <option value=\"136.5\">136.5</option>\r\n            <option value=\"141.3\">141.3</option>\r\n            <option value=\"146.2\">146.2</option>\r\n            <option value=\"151.4\">151.4</option>\r\n            <option value=\"156.7\">156.7</option>\r\n            <option value=\"162.2\">162.2</option>\r\n            <option value=\"167.9\">167.9</option>\r\n            <option value=\"173.8\">173.8</option>\r\n            <option value=\"179.9\">179.9</option>\r\n            <option value=\"186.2\">186.2</option>\r\n            <option value=\"192.8\">192.8</option>\r\n            <option value=\"203.5\">203.5</option>\r\n            <option value=\"210.7\">210.7</option>\r\n            <option value=\"218.1\">218.1</option>\r\n            <option value=\"225.7\">225.7</option>\r\n            <option value=\"233.6\">233.6</option>\r\n            <option value=\"241.8\">241.8</option>\r\n            <option value=\"250.3\">250.3</option>\r\n          </select>\r\n          <div className=\"input-group-append\">\r\n            <label className=\"input-group-text\">Hz</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Power extends Component {\r\n  render() {\r\n    const optionsList = this.props.powerList.map(power => (\r\n      <option value={power}>{power}</option>\r\n    ));\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>Power</label>\r\n        <div className=\"input-group\">\r\n          <select\r\n            name=\"power-select\"\r\n            id=\"power-select\"\r\n            className=\"form-control\"\r\n          >\r\n            <option>Choose..</option>\r\n            {optionsList}\r\n          </select>\r\n          <div className=\"input-group-append\">\r\n            <span className=\"input-group-text\">Watts</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Name extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label>Channel name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"channelName\"\r\n          className=\"form-control\"\r\n          placeholder=\"AO-92\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Export() {\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <form\r\n      className=\"form-group col mb-2 col-sm-5 mb-sm-0 col-lg-2  flex-d justify-content-center align-items-center\"\r\n      id=\"sheet-update-form\"\r\n    >\r\n      <button\r\n        className=\"btn btn-primary btn-large btn-block\"\r\n        id=\"sheet-update-button\"\r\n        onClick={handleClick}\r\n      >\r\n        Export\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Callsign from \"./Callsign\";\r\nimport RadioInput from \"./RadioInput\";\r\nimport SatSearch from \"./SatSearch/SatSearch\";\r\nimport Channels from \"./Channels\";\r\nimport Tone from \"./Tone\";\r\nimport Power from \"./Power\";\r\nimport Name from \"./Name\";\r\nimport Export from \"./Export\";\r\n\r\nexport default class Config extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(option) {\r\n    this.props.onOptionChange(option);\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        // styled by style.css\r\n        className=\"col col-12 col-sm-5 col-lg-2  p-0\"\r\n        id=\"config-container\"\r\n      >\r\n        <form className=\"container mt-2 d-flex flex-column\">\r\n          <Callsign />\r\n          <RadioInput\r\n            options={this.props.radios}\r\n            value={this.props.value}\r\n            selectInfo={{ label: \"Radio\", inputName: \"radioInput\" }}\r\n            onOptionChange={this.handleChange}\r\n          />\r\n          <SatSearch />\r\n          <Channels\r\n            channelStart={this.props.channelStart}\r\n            handleChange={this.props.handleChange.bind(this)}\r\n          />\r\n          <Tone />\r\n          <Power powerList={this.props.selectedRadio.power} />\r\n          <Name />\r\n        </form>\r\n        <Export />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport Table from \"./table/Table\";\r\nimport Config from \"./Config/Config\";\r\nimport { Row } from \"react-bootstrap/\";\r\n\r\nimport channels from \"../../json/channels.json\";\r\nimport radios from \"../../json/radios.json\";\r\n\r\nexport default class home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setHeader = this.setHeader.bind(this);\r\n    this.handleChannelChange = this.handleChannelChange.bind(this);\r\n    this.state = {\r\n      selectedOption: 0,\r\n      bodyContent: channels,\r\n      selectedRadio: radios.find(radio => parseInt(radio.id) === 1),\r\n      channelStart: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange(option) {\r\n    this.setState({ selectedOption: option });\r\n    let foundRadio = radios.find(radio => radio.id === parseInt(option));\r\n    foundRadio\r\n      ? this.setState({ selectedRadio: foundRadio })\r\n      : this.setState({ selectedRadio: radios[0] });\r\n  }\r\n\r\n  setHeader(header) {\r\n    this.setState({ tableRow: header });\r\n  }\r\n\r\n  updateRadio(id) {}\r\n\r\n  handleChannelChange(e) {\r\n    this.setState({ channelStart: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <Row className=\"row m-0\">\r\n          <Config\r\n            onOptionChange={this.handleChange}\r\n            Option={this.state.selectedOption}\r\n            radios={radios}\r\n            selectedRadio={this.state.selectedRadio}\r\n            value={this.state.selectedOption}\r\n            channelStart={this.state.channelStart}\r\n            handleChange={this.handleChannelChange}\r\n          />\r\n          <Table\r\n            columns={this.state.selectedRadio.channelDetails}\r\n            selectedOption={this.state.selectedOption}\r\n            bodyContent={this.state.bodyContent}\r\n          />\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../Navbar\";\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst asideStyle = {\r\n  position: \"fixed\",\r\n  top: \"56px\",\r\n  width: \"175px\",\r\n  left: 0,\r\n  bottom: 0,\r\n  overflowY: \"auto\"\r\n};\r\n\r\nexport default class home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"d-flex row mt-5 no-gutters justify-content-around\">\r\n          <aside className=\"col-2 mt-5 d-none d-lg-block\" style={asideStyle}>\r\n            <div className=\"list-group-flush\">\r\n              <Link\r\n                to=\"#what_is_it\"\r\n                className=\"list-group-item list-group-item-action px-1\"\r\n              >\r\n                What is it?\r\n              </Link>\r\n              <Link\r\n                to=\"#how_do_i_use_it\"\r\n                className=\"list-group-item list-group-item-action px-1\"\r\n              >\r\n                How do I use it?\r\n              </Link>\r\n              <Link\r\n                to=\"#how_does_it_work\"\r\n                className=\"list-group-item list-group-item-action px-1\"\r\n              >\r\n                How does it work?\r\n              </Link>\r\n              <Link\r\n                to=\"#who_made_it\"\r\n                className=\"list-group-item list-group-item-action px-1\"\r\n              >\r\n                Who made it?\r\n              </Link>\r\n              <Link\r\n                to=\"#how_can_i_help\"\r\n                className=\"list-group-item list-group-item-action px-1\"\r\n              >\r\n                How can I help?\r\n              </Link>\r\n            </div>\r\n          </aside>\r\n          <article className=\"col-10 col-lg-6 offset-lg-3\">\r\n            <h1 className=\"display-4\">ChirpSAT</h1>\r\n            <p className=\"lead mb-5\">\r\n              Simple satellite programming for radio amateurs.\r\n            </p>\r\n            <Container>\r\n              <h2>\r\n                <span\r\n                  id=\"what_is_it\"\r\n                  style={{\r\n                    marginTop: \"-60px\",\r\n                    paddingBottom: \"60px\",\r\n                    display: \"block\"\r\n                  }}\r\n                ></span>\r\n                What is it?\r\n              </h2>\r\n              <p>\r\n                ChirpSAT is a web tool built for the amateur radio satellite\r\n                community. Its primary function is to generate channels with\r\n                doppler shift correction that can be easily imported into{\" \"}\r\n                <abbr title=\"customer programming software\">CPS</abbr> and\r\n                programmed to a radio.\r\n              </p>\r\n            </Container>\r\n            <Container>\r\n              <h2>\r\n                <span\r\n                  id=\"how_do_i_use_it\"\r\n                  style={{\r\n                    marginTop: \"-60px\",\r\n                    paddingBottom: \"60px\",\r\n                    display: \"block\"\r\n                  }}\r\n                ></span>\r\n                How do I use it?\r\n              </h2>\r\n              <p>\r\n                ChirpSAT is easy to use, from the <Link to=\"/\">home</Link> page\r\n                select your radio. This will load options specific to your radio\r\n                and ensure that the .csv generated will be usable in your{\" \"}\r\n                <abbr title=\"customer programming software\">CPS</abbr>.\r\n              </p>\r\n\r\n              <section className=\"container text-muted\">\r\n                <p>\r\n                  If you've never programmed your radio before, check out{\" \"}\r\n                  <a\r\n                    href=\"https://powerwerx.com/help/two-way-radios\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    Powerwerx\r\n                  </a>{\" \"}\r\n                  or{\" \"}\r\n                  <a\r\n                    href=\"https://www.bridgecomsystems.com/pages/support\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    BridgeCom Systems\r\n                  </a>{\" \"}\r\n                  for support on your radio and a download link to the\r\n                  programming software you need.\r\n                </p>\r\n                <p>\r\n                  Alternatively, you can use third-party software like{\" \"}\r\n                  <a\r\n                    href=\"https://chirp.danplanet.com/projects/chirp/wiki/Home\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    CHIRP\r\n                  </a>\r\n                  , but proceed at your own risk, the use of third-party\r\n                  software introduces its own risks.\r\n                </p>\r\n              </section>\r\n              <p>\r\n                With your radio selected, choose which satellites you would like\r\n                to create channels for and program to your radio.\r\n              </p>\r\n              <p>\r\n                Next, choose which channel you would like to to start with. If\r\n                you already have channels programmed into your radio, you may\r\n                want to start with a later, empty, channel. You can always\r\n                change your channel numbering on your own either with a .csv\r\n                editor like Excel or within your{\" \"}\r\n                <abbr title=\"customer programming software\">CPS</abbr>.\r\n              </p>\r\n              <p>\r\n                Satellite up-link and down-link data for the satellites you've\r\n                selected will be imported, which you can manually override by\r\n                selecting the satellite dropdown, and choosing edit.\r\n              </p>\r\n\r\n              <p>\r\n                Choose the power level you would like to use when transmitting.\r\n                It is always recommended that you use the least amount of power\r\n                needed to make a contact, which for satellites can be as little\r\n                as 2 watts.\r\n              </p>\r\n              <p>\r\n                The last step is to configure the naming convention of your\r\n                channels. By default, channels will be named by the satellite\r\n                name, and their channel offset relative to the center channel.\r\n              </p>\r\n              <samp>\r\n                <p className=\"text-muted ml-5\">AO-92 (-3)</p>\r\n              </samp>\r\n              <p>\r\n                You can change the naming convention using{\" \"}\r\n                <code>#keywords#</code>. The default naming is:\r\n              </p>\r\n\r\n              <p className=\"ml-5\">\r\n                &lt;<code>#satellite_name#</code>(<code>#channel_offset#</code>\r\n                )&gt;\r\n              </p>\r\n              <p>\r\n                Lastly, you'll export your channels into a .csv file which you\r\n                can import into the{\" \"}\r\n                <abbr title=\"customer programming software\">CPS</abbr> of your\r\n                choosing. If you've already created channels, you may want to\r\n                export the existing channels into a .csv, and combine the two by\r\n                copy pasting from one to the other, then import the new file.\r\n              </p>\r\n            </Container>\r\n            <Container>\r\n              <h2>\r\n                <span\r\n                  id=\"how_does_it_work\"\r\n                  style={{\r\n                    marginTop: \"-60px\",\r\n                    paddingBottom: \"60px\",\r\n                    display: \"block\"\r\n                  }}\r\n                ></span>\r\n                How does it work?\r\n              </h2>\r\n              <p>\r\n                Satellite data is acquired from{\" \"}\r\n                <a\r\n                  href=\"https://db.satnogs.org/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  SatNOGS DB\r\n                </a>\r\n                , and the up-link and down-link frequencies are used to\r\n                automatically generate channels with doppler shift correction\r\n                for easy programming.\r\n              </p>\r\n              <p>\r\n                ChirpSAT is built with{\" \"}\r\n                <a\r\n                  href=\"https://reactjs.org/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  React\r\n                </a>\r\n                , styled by{\" \"}\r\n                <a\r\n                  href=\"https://getbootstrap.com/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Bootstrap\r\n                </a>\r\n                , and uses icons from{\" \"}\r\n                <a\r\n                  href=\"https://www.fontawesome.com\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Font Awesome\r\n                </a>\r\n                .\r\n              </p>\r\n            </Container>\r\n            <Container>\r\n              <h2>\r\n                <span\r\n                  id=\"who_made_it\"\r\n                  style={{\r\n                    marginTop: \"-60px\",\r\n                    paddingBottom: \"60px\",\r\n                    display: \"block\"\r\n                  }}\r\n                ></span>\r\n                Who made it?\r\n              </h2>\r\n              <p>\r\n                ChirpSAT was created by Michael Parry{\" \"}\r\n                <a\r\n                  href=\"https://www.qrz.com/db/KE8KDF\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  KE8KDF\r\n                </a>\r\n                . It was created to simplify the process of programming HTs that\r\n                use a <abbr title=\"consumer programming software\">CPS</abbr>,\r\n                which are often frustrating and tedious to use. If you'd like to\r\n                keep up with the project, check it out on{\" \"}\r\n                <a\r\n                  href=\"https://github.com/michael-parry/chirpsat\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Github\r\n                </a>\r\n                .\r\n              </p>\r\n            </Container>\r\n            <Container>\r\n              <h2>\r\n                <span\r\n                  id=\"how_can_i_help\"\r\n                  style={{\r\n                    marginTop: \"-60px\",\r\n                    paddingBottom: \"60px\",\r\n                    display: \"block\"\r\n                  }}\r\n                ></span>\r\n                How can I help?\r\n              </h2>\r\n              <p>\r\n                If you're interested in helping with ChirpSAT, send an email to{\" \"}\r\n                <a\r\n                  href=\"mailto:ke8kdf@yahoo.com\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  KE8KDF@yahoo.com\r\n                </a>\r\n                .\r\n              </p>\r\n            </Container>\r\n          </article>\r\n          <div class=\"col-2 d-none d-lg-block\"></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/home/Home\";\r\nimport About from \"./components/about/About\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/about\">\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}